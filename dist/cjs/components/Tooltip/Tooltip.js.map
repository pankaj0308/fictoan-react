{"version":3,"file":"Tooltip.js","sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardProps } from \"../Card/Card\";\n\nimport { TooltipStyled } from \"./Tooltip.styled\";\n\nexport interface TooltipCustomProps {\n    label: string;\n    position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n    children?: React.ReactNode;\n}\n\nexport type TooltipElementType = HTMLDivElement;\nexport type TooltipProps = Omit<CardProps, keyof TooltipCustomProps> & TooltipCustomProps;\n\nexport const Tooltip = React.forwardRef(\n    ({ label, position = \"bottom\", children, ...props }: TooltipProps, ref: React.Ref<TooltipElementType>) => {\n        const [appear, setAppear] = useState<boolean>(false);\n\n        const show = () => {\n            setAppear(true);\n        };\n\n        const hide = () => {\n            setAppear(false);\n        };\n\n        return (\n            <TooltipStyled onMouseOver={show} onMouseOut={hide}>\n                {label && appear && (\n                    <Card\n                        className={`tooltip ${position}`}\n                        paddingLeft=\"nano\"\n                        paddingRight=\"nano\"\n                        borderColor=\"transparent\"\n                        ref={ref}\n                        {...props}\n                    >\n                        {label}\n                    </Card>\n                )}\n                {children}\n            </TooltipStyled>\n        );\n    }\n);\n"],"names":["Tooltip","React","forwardRef","_a","ref","label","position","children","props","appear","setAppear","useState","TooltipStyled","onMouseOver","onMouseOut","Card","className","paddingLeft","paddingRight","borderColor"],"mappings":"obAcaA,EAAUC,UAAMC,YACzB,CAACC,EAAkEC,SAAlEC,MAAEA,EAAFC,SAASA,EAAW,SAApBC,SAA8BA,KAAaC,aAA3C,uCACUC,EAAQC,GAAaC,YAAkB,UAW1CV,wBAACW,iBAAcC,YATN,KACTH,GAAU,IAQwBI,WALzB,KACTJ,GAAU,KAKLL,GAASI,GACNR,wBAACc,sBACGC,qBAAsBV,IACtBW,YAAY,OACZC,aAAa,OACbC,YAAY,cACZf,IAAKA,GACDI,GAEHH,GAGRE"}