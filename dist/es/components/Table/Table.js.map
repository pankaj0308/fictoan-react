{"version":3,"file":"Table.js","sources":["../../../../src/components/Table/Table.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../Element\";\nimport { CommonAndHTMLProps } from \"../Element/constants\";\n\nimport { TableStyled } from \"./Table.styled\";\n\n// prettier-ignore\nexport interface TableCustomProps {\n    bordersFor  ? : \"rows\" | \"columns\" | \"both\";\n    isStriped   ? : boolean;\n    isHoverable ? : boolean;\n    isFullWidth ? : boolean;\n    alignText   ? : \"left\" | \"right\" | \"centre\" | \"center\";\n}\n\nexport type TableElementType = HTMLTableElement;\nexport type TableProps = Omit<CommonAndHTMLProps<TableElementType>, keyof TableCustomProps> & TableCustomProps;\n\nexport const Table = React.forwardRef(\n    (\n        { bordersFor, isStriped, isHoverable, isFullWidth, alignText, ...props }: TableProps,\n        ref: React.Ref<TableElementType>\n    ) => {\n        let classNames = [];\n\n        if (bordersFor) {\n            classNames.push(`bordered-${bordersFor}`);\n        }\n\n        if (isStriped) {\n            classNames.push(\"striped\");\n        }\n\n        if (isHoverable) {\n            classNames.push(\"hoverable\");\n        }\n\n        if (isFullWidth) {\n            classNames.push(\"full-width\");\n        }\n\n        if (alignText) {\n            classNames.push(`align-text-${alignText}`);\n        }\n\n        return <Element<TableElementType> as={TableStyled} classNames={classNames} {...props} />;\n    }\n);\n"],"names":["Table","React","forwardRef","_a","ref","bordersFor","isStriped","isHoverable","isFullWidth","alignText","props","classNames","push","Element","as","TableStyled"],"mappings":"0JAmBaA,eAAQC,EAAMC,YACvB,CACIC,EACAC,SADAC,WAAEA,EAAFC,UAAcA,EAAdC,YAAyBA,EAAzBC,YAAsCA,EAAtCC,UAAmDA,KAAcC,MAAjE,wEAGIC,EAAa,UAEbN,GACAM,EAAWC,iBAAiBP,KAG5BC,GACAK,EAAWC,KAAK,WAGhBL,GACAI,EAAWC,KAAK,aAGhBJ,GACAG,EAAWC,KAAK,cAGhBH,GACAE,EAAWC,mBAAmBH,kBAG3BR,gBAACY,iBAA0BC,GAAIC,EAAaJ,WAAYA,GAAgBD"}