{"version":3,"file":"BaseInputComponent.js","sources":["../../../../../src/components/Form/BaseInputComponent/BaseInputComponent.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../../Element/Element\";\n\nimport { InputLabel } from \"../InputLabel/InputLabel\";\nimport { FormItem } from \"../FormItem/FormItem\";\nimport { BaseInputComponentWithIconProps } from \"./constants\";\n\nexport type InputElementType = HTMLInputElement | HTMLDivElement | HTMLSelectElement;\nexport const BaseInputComponent = React.forwardRef(\n    <K extends InputElementType>(\n        {\n            as: Component,\n            className,\n            label,\n            helpText,\n            errorText,\n            iconLeft,\n            iconRight,\n            validateThis,\n            classNames,\n            ...inputProps\n        }: BaseInputComponentWithIconProps<K>,\n        ref: React.LegacyRef<InputElementType>\n    ) => (\n        <FormItem required={inputProps.required}>\n            <Element<K>\n                as={Component}\n                ref={ref}\n                classNames={[\n                    className,\n                    iconLeft && \"with-icon-left\",\n                    iconRight && \"with-icon-right\",\n                    validateThis && \"validate-this\",\n                ].concat(classNames)}\n                {...inputProps}\n            />\n\n            {iconLeft && (\n                <Element as=\"span\" className=\"icon-left\">\n                    {iconLeft}\n                </Element>\n            )}\n            {iconRight && (\n                <Element as=\"span\" className=\"icon-right\">\n                    {iconRight}\n                </Element>\n            )}\n\n            {label && <InputLabel label={label} htmlFor={inputProps.id} />}\n\n            {(helpText || errorText) && (\n                <Element as=\"div\" className=\"info-section vertically-center-items\" marginTop=\"nano\">\n                    {helpText && (\n                        <Element as=\"span\" className=\"help-text\">\n                            {helpText}\n                        </Element>\n                    )}\n                    {errorText && (\n                        <Element as=\"span\" className=\"error-text\">\n                            {errorText}\n                        </Element>\n                    )}\n                </Element>\n            )}\n        </FormItem>\n    )\n) as <K extends InputElementType>(\n    props: BaseInputComponentWithIconProps<K> & { ref?: React.LegacyRef<InputElementType> }\n) => React.ReactElement;\n"],"names":["BaseInputComponent","React","forwardRef","_a","ref","as","Component","className","label","helpText","errorText","iconLeft","iconRight","validateThis","classNames","inputProps","FormItem","required","Element","concat","InputLabel","htmlFor","id","marginTop"],"mappings":"ocASaA,eAAqBC,EAAMC,YACpC,CACIC,EAYAC,SAXIC,GAAIC,EADRC,UAEIA,EAFJC,MAGIA,EAHJC,SAIIA,EAJJC,UAKIA,EALJC,SAMIA,EANJC,UAOIA,EAPJC,aAQIA,EARJC,WASIA,KACGC,MAVP;OAcAd,gBAACe,GAASC,SAAUF,EAAWE,uBAC3BhB,gBAACiB,iBACGb,GAAIC,EACJF,IAAKA,EACLU,WAAY,CACRP,EACAI,GAAY,iBACZC,GAAa,kBACbC,GAAgB,iBAClBM,OAAOL,IACLC,IAGPJ,gBACGV,gBAACiB,GAAQb,GAAG,OAAOE,UAAU,aACxBI,GAGRC,gBACGX,gBAACiB,GAAQb,GAAG,OAAOE,UAAU,cACxBK,GAIRJ,gBAASP,gBAACmB,GAAWZ,MAAOA,EAAOa,QAASN,EAAWO,MAEtDb,GAAYC,iBACVT,gBAACiB,GAAQb,GAAG,MAAME,UAAU,uCAAuCgB,UAAU,QACxEd,gBACGR,gBAACiB,GAAQb,GAAG,OAAOE,UAAU,aACxBE,GAGRC,gBACGT,gBAACiB,GAAQb,GAAG,OAAOE,UAAU,cACxBG"}