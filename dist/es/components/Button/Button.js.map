{"version":3,"file":"Button.js","sources":["../../../../src/components/Button/Button.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../Element/Element\";\nimport { CommonAndHTMLProps } from \"../Element/constants\";\n\nimport { ButtonStyled } from \"./Button.styled\";\n\n// prettier-ignore\nexport interface ButtonCustomProps {\n    kind      ? : \"primary\" | \"secondary\" | \"tertiary\" | \"custom\";\n    size      ? : \"tiny\" | \"small\" | \"medium\" | \"large\" | \"huge\";\n    shape     ? : \"rounded\" | \"curved\" | \"circular\";\n    isLoading ? : boolean;\n    hasDelete ? : boolean;\n}\n\nexport type ButtonElementType = HTMLButtonElement;\nexport type ButtonProps = Omit<CommonAndHTMLProps<ButtonElementType>, keyof ButtonCustomProps> & ButtonCustomProps;\n\nexport const Button = React.forwardRef(\n    ({ size, shape, kind, isLoading, hasDelete, ...props }: ButtonProps, ref: React.Ref<ButtonElementType>) => {\n        let classNames = [];\n\n        if (kind) {\n            classNames.push(kind);\n        }\n\n        if (size) {\n            classNames.push(`size-${size}`);\n        }\n\n        if (shape) {\n            classNames.push(`shape-${shape}`);\n        }\n\n        if (isLoading) {\n            classNames.push(\"is-loading\");\n        }\n\n        if (hasDelete) {\n            classNames.push(\"has-delete\");\n        }\n\n        return <Element<ButtonElementType> as={ButtonStyled} ref={ref} classNames={classNames} {...props} />;\n    }\n);\n"],"names":["Button","React","forwardRef","_a","ref","size","shape","kind","isLoading","hasDelete","props","classNames","push","Element","as","ButtonStyled"],"mappings":"uQAmBaA,eAASC,EAAMC,YACxB,CAACC,EAAoEC,SAApEC,KAAEA,EAAFC,MAAQA,EAARC,KAAeA,EAAfC,UAAqBA,EAArBC,UAAgCA,KAAcC,MAA9C,qDACOC,EAAa,UAEbJ,GACAI,EAAWC,KAAKL,GAGhBF,GACAM,EAAWC,aAAaP,KAGxBC,GACAK,EAAWC,cAAcN,KAGzBE,GACAG,EAAWC,KAAK,cAGhBH,GACAE,EAAWC,KAAK,2BAGbX,gBAACY,iBAA2BC,GAAIC,EAAcX,IAAKA,EAAKO,WAAYA,GAAgBD"}