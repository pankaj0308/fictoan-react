{"version":3,"file":"Text.js","sources":["../../../../src/components/Typography/Text.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../Element\";\nimport { CommonAndHTMLProps, SpacingTypes, WeightTypes } from \"../Element/constants\";\n\n// prettier-ignore\nexport interface TextCustomProps {\n    style     ? : \"sans-serif\" | \"serif\" | \"monospace\";\n    weight    ? : WeightTypes;\n    isSubtext ? : boolean;\n    size      ? : SpacingTypes;\n    align     ? : \"left\" | \"centre\" | \"center\" | \"right\";\n}\n\nexport type TextElementType = HTMLParagraphElement;\nexport type TextProps = Omit<CommonAndHTMLProps<TextElementType>, keyof TextCustomProps> & TextCustomProps;\n\nexport const Text = React.forwardRef(\n    ({ weight, size, style = \"sans-serif\", align, isSubtext, ...props }: TextProps, ref: React.Ref<TextElementType>) => {\n        let classNames = [];\n\n        if (weight) {\n            classNames.push(`weight-${weight}`);\n        }\n\n        if (size) {\n            classNames.push(`text-${size}`);\n        }\n\n        if (style) {\n            classNames.push(`font-${style}`);\n        }\n\n        if (isSubtext) {\n            classNames.push(\"sub-text\");\n        }\n\n        if (align) {\n            classNames.push(`text-${align}`);\n        }\n\n        return <Element<TextElementType> as=\"p\" ref={ref} classNames={classNames} {...props} />;\n    }\n);\n"],"names":["Text","React","forwardRef","_a","ref","weight","size","style","align","isSubtext","props","classNames","push","Element","as"],"mappings":"gFAiBaA,eAAOC,EAAMC,YACtB,CAACC,EAA+EC,SAA/EC,OAAEA,EAAFC,KAAUA,EAAVC,MAAgBA,EAAQ,aAAxBC,MAAsCA,EAAtCC,UAA6CA,KAAcC,MAA3D,mDACOC,EAAa,UAEbN,GACAM,EAAWC,eAAeP,KAG1BC,GACAK,EAAWC,aAAaN,KAGxBC,GACAI,EAAWC,aAAaL,KAGxBE,GACAE,EAAWC,KAAK,YAGhBJ,GACAG,EAAWC,aAAaJ,kBAGrBP,gBAACY,iBAAyBC,GAAG,IAAIV,IAAKA,EAAKO,WAAYA,GAAgBD"}