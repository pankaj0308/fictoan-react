{"version":3,"file":"Badge.js","sources":["../../../../src/components/Badge/Badge.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../Element/Element\";\nimport { CommonAndHTMLProps } from \"../Element/constants\";\n\nimport { BadgeStyled } from \"./Badge.styled\";\n\n// prettier-ignore\nexport interface BadgeCustomProps {\n    size      ? : \"tiny\" | \"small\" | \"medium\" | \"large\" | \"huge\";\n    shape     ? : \"rounded\" | \"curved\";\n}\n\nexport type BadgeElementType = HTMLDivElement;\nexport type BadgeProps = Omit<CommonAndHTMLProps<BadgeElementType>, keyof BadgeCustomProps> & BadgeCustomProps;\n\nexport const Badge = React.forwardRef(\n    ({ size = \"tiny\", shape, kind, ...props }: BadgeProps, ref: React.Ref<BadgeElementType>) => {\n        let classNames = [];\n\n        if (kind) {\n            classNames.push(kind);\n        }\n\n        if (size) {\n            classNames.push(`size-${size}`);\n        }\n\n        if (shape) {\n            classNames.push(`shape-${shape}`);\n        }\n\n        return <Element<BadgeElementType> as={BadgeStyled} ref={ref} classNames={classNames} {...props} />;\n    }\n);\n"],"names":["Badge","React","forwardRef","_a","ref","size","shape","kind","props","classNames","push","Element","as","BadgeStyled"],"mappings":"mOAgBaA,eAAQC,EAAMC,YACvB,CAACC,EAAsDC,SAAtDC,KAAEA,EAAO,OAATC,MAAiBA,EAAjBC,KAAwBA,KAASC,MAAjC,6BACOC,EAAa,UAEbF,GACAE,EAAWC,KAAKH,GAGhBF,GACAI,EAAWC,aAAaL,KAGxBC,GACAG,EAAWC,cAAcJ,kBAGtBL,gBAACU,iBAA0BC,GAAIC,EAAaT,IAAKA,EAAKK,WAAYA,GAAgBD"}